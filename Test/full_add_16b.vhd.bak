library ieee;
use ieee.std_logic_1164.all;

entity full_add_16b is
  port(A, B: in std_logic_vector(15 downto 0);
       Cin: in std_logic;
       S: out std_logic_vector(15 downto 0);
       Cout, Oout, Zout: out std_logic);
end full_add_16b;

component full_add
  port(A, B: in std_logic;
       Cin: in std_logic;
       S: out std_logic;
       Cout: out std_logic);
end component;

signal Cr, LS: std_logic_vector(7 downto 0);

begin
  -- 8-bitowy sumator dla pierwszych 8 bitów
  s0: full_add port map (A(0), B(0), Cin,   LS(0), Cr(0));
  s1: full_add port map (A(1), B(1), Cr(0), LS(1), Cr(1));
  s2: full_add port map (A(2), B(2), Cr(1), LS(2), Cr(2));
  s3: full_add port map (A(3), B(3), Cr(2), LS(3), Cr(3));
  s4: full_add port map (A(4), B(4), Cr(3), LS(4), Cr(4));
  s5: full_add port map (A(5), B(5), Cr(4), LS(5), Cr(5));
  s6: full_add port map (A(6), B(6), Cr(5), LS(6), Cr(6));
  s7: full_add port map (A(7), B(7), Cr(6), LS(7), Cr(7));

  -- 8-bitowy sumator dla drugich 8 bitów
  s8: full_add port map (A(8), B(8), Cr(7), LS(8), Cr(8));
  s9: full_add port map (A(9), B(9), Cr(8), LS(9), Cr(9));
  s10: full_add port map (A(10), B(10), Cr(9), LS(10), Cr(10));
  s11: full_add port map (A(11), B(11), Cr(10), LS(11), Cr(11));
  s12: full_add port map (A(12), B(12), Cr(11), LS(12), Cr(12));
  s13: full_add port map (A(13), B(13), Cr(12), LS(13), Cr(13));
s14: full_add port map (A(14), B(14), Cr(13), LS(14), Cr(14));
s15: full_add port map (A(15), B(15), Cr(14), LS(15), Cr(15));

Cout <= Cr(15);
Oout <= Cr(15) xor Cr(14);
Zout <= not (LS(0) or LS(1) or LS(2) or LS(3) or LS(4) or LS(5) or LS(6) or LS(7) or LS(8) or LS(9) or LS(10) or LS(11) or LS(12) or LS(13) or LS(14) or LS(15));
S <= LS;
end full_add_16b_arch;